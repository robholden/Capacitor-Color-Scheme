{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAK5C,MAAM,OAAO,cAAe,SAAQ,SAAS;IAC3C,KAAK,CAAC,SAAS,CAAC,OAEf;QACC,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAC9D,IAAI,CAAC,SAAS,CAAC,OAAO;YACpB,OAAO,EAAE,MAAM,EAAE,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,cAAc,KAAI,SAAS,EAAE,CAAC;QAE1D,MAAM,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC;QACtE,OAAO;YACL,MAAM,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;SAC/C,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,WAAW,CACf,QAAmD,EACnD,OAEC;QAED,MAAM,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC;QAC3E,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE,CACrD,QAAQ,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CACxC,CAAC;QACF,QAAQ,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1C,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport { ColorSchemePlugin, DeviceScheme } from './definitions';\n\nexport class ColorSchemeWeb extends WebPlugin implements ColorSchemePlugin {\n  async getScheme(options?: {\n    fallbackScheme?: DeviceScheme;\n  }): Promise<{ scheme: DeviceScheme }> {\n    const hasPrefer = window.matchMedia('(prefers-color-scheme)');\n    if (!hasPrefer.matches)\n      return { scheme: options?.fallbackScheme || 'Unknown' };\n\n    const hasDarkMode = window.matchMedia('(prefers-color-scheme: dark)');\n    return {\n      scheme: hasDarkMode.matches ? 'Dark' : 'Light',\n    };\n  }\n\n  async watchScheme(\n    callback: (result: { scheme: DeviceScheme }) => any,\n    options?: {\n      fallbackScheme?: DeviceScheme;\n    },\n  ): Promise<void> {\n    const colorSchemeQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    colorSchemeQuery.addEventListener('change', async () =>\n      callback(await this.getScheme(options)),\n    );\n    callback(await this.getScheme(options));\n  }\n}\n"]}